rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all
    match /{allPaths=**} {
      allow read, write: if false;
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read;
      allow write: if request.auth != null && request.auth.uid == userId && 
                     request.resource.size < 5 * 1024 * 1024 && // 5MB
                     request.resource.contentType.matches('image/.*');
    }
    
    // Chat files (for direct file uploads)
    match /chat-files/{conversationId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.resource.size < 100 * 1024 * 1024 && // 100MB
                     (
                       request.resource.contentType.matches('image/.*') || 
                       request.resource.contentType.matches('video/.*') || 
                       request.resource.contentType.matches('audio/.*') || 
                       request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('text/.*')
                     );
    }
    
    // Message attachments
    match /messages/{messageId}/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
                     request.resource.size < 100 * 1024 * 1024 && // 100MB
                     (
                       request.resource.contentType.matches('image/.*') || 
                       request.resource.contentType.matches('video/.*') || 
                       request.resource.contentType.matches('audio/.*') || 
                       request.resource.contentType.matches('application/pdf') ||
                       request.resource.contentType.matches('text/.*')
                     );
    }
    
    // Post media
    match /posts/{postId}/{fileName} {
      allow read;
      allow write: if request.auth != null && 
                     request.resource.size < 50 * 1024 * 1024 && // 50MB
                     (
                       request.resource.contentType.matches('image/.*') || 
                       request.resource.contentType.matches('video/.*')
                     );
    }
  }
}
